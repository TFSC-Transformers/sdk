syntax = "proto3";



message GetBlockReq
{
    string version = 1;
    uint64 height = 2;
}


message BlockItem
{
    string  blockhash = 1;
    repeated string  addr = 2;
}

message GetBlockAck
{
    string version = 1;
    sint32 code = 2;
    string message = 3;
    uint64 height = 4;
    uint64 timestamp = 5;
    repeated BlockItem list = 6;  
}


/*************************************    *************************************/
/*************************************Get the balance*************************************/

message GetBalanceReq 
{
    string version = 1;
    string address = 2;
}

 
message GetBalanceAck 
{
    string version = 1;
    sint32 code = 2;
    string message = 3;

     
    string address = 4;
    uint64 balance = 5;
    uint64 height = 6;
}

/*************************************      *************************************/
/*************************************Get node information*************************************/

message GetNodeInfoReq 
{
    string version = 1;
}

 
message GetNodeInfoAck 
{
    string version = 1;
    sint32 code = 2;
    string message = 3;

     
    string address = 4;
    string ip = 5;
    uint64 height = 6;
    uint64 gas = 7;
    string ver = 8;
}

/*************************************    *************************************/
/*************************************Stake list*************************************/

 
message GetStakeListReq 
{
    string version = 1;  
    string addr = 2;  
}

 
message StakeItem
{
    string blockhash = 1;  
    uint32 blockheight = 2;  
    string utxo = 3;  
    uint64 amount = 4;  
    uint64 time  = 5;  
    string fromaddr = 6;  
    string toaddr = 7;   
    string detail = 8;   
}  

message GetStakeListAck
{
    string version = 1;  
    int32 code = 2;  
    string message = 3; 
    repeated StakeItem list = 4;  
}

/*************************************    *************************************/
/*************************************List of investments*************************************/

message GetInvestListReq
{
    string version = 1;  
    string addr = 2;  
}

 
 
message InvestItem
{
    string blockhash = 1;  
    uint32 blockheight = 2;  
    string utxo = 3;  
    uint64 amount = 4;  
    uint64 time  = 5;  
    string fromaddr = 6;  
    string toaddr = 7;   
    string detail = 8;   
}

message GetInvestListAck
{
    string version = 1;  
    int32 code = 2;  
    string message = 3; 
    repeated InvestItem list = 4;  
}

/*************************************      *************************************/
/*************************************Transactions in progress*************************************/

enum TxType
{
    TxTypeUnknown = 0;
    TxTypeTx = 1;  
    TxTypeStake = 2;  
    TxTypeUnstake = 3;  
    TxTypeInvest = 4;  
    TxTypeDisinvest = 5;  
    TxTypeBonus = 6;  
}

 
 
message GetTxPendingListReq 
{
    string version = 1;  
    repeated string addr = 2;  
}

 
 
message TxPendingItem
{
    string txHash = 1;  
    repeated string vins = 2;  
    repeated string fromaddr = 3;  
    repeated string toaddr = 4;   
    uint64 amount = 5;  
    uint64 time  = 6;  
    string detail = 7;   
    uint64 gas = 8;  
    repeated uint64 toAmount = 9;  
    TxType type = 10;  
}  

message GetTxPendingListAck
{
    string version = 1;  
    int32 code = 2;  
    string message = 3; 
    repeated string addr = 4;  
    repeated TxPendingItem list = 5;  
}


/*************************************     *************************************/
/*************************************Failed transactions*************************************/

message GetTxFailureListReq
{
    string version = 1;  
    string addr = 2;  
    string txhash = 3;  
    uint32 count = 4;  
}

message TxFailureItem
{
    string txHash = 1;  
    repeated string vins = 2;  
    repeated string fromaddr = 3;  
    repeated string toaddr = 4;   
    uint64 amount = 5;  
    uint64 time  = 6;  
    string detail = 7;   
    uint64 gas = 8;  
    repeated uint64 toAmount = 9;  
    TxType type = 10;  
} 

message GetTxFailureListAck
{
    string version = 1;  
    int32 code = 2;  
    string message = 3;  
    uint32 total = 4;  
    repeated TxFailureItem list = 5;  
    string lasthash = 6;  
}


/*************************************  utxo*************************************/
/*************************************Query UTXO*************************************/

message GetUtxoReq
{
    string version = 1;  
    string address = 2;  
}

message Utxo
{
    string hash = 1;  
    uint64 value = 2;  
    uint32 n = 3;  
}

message GetUtxoAck
{
    string version = 1;  
    int32 code = 2;  
    string message = 3;  
    string address = 4;  
    repeated Utxo utxos = 5;  
}

/*************************************                  *************************************/
/*************************************Query all investment accounts and amounts on the investee node*************************************/

message GetAllInvestAddressReq 
{
    string version              = 1;
    string addr                 = 2;
}

message InvestAddressItem 
{
    string addr                 = 1;  
    uint64 value                = 2;  
}

 
 
message GetAllInvestAddressAck 
{
    string version     = 1;
    sint32 code        = 2;
    string message     = 3;
    string addr        = 4;
    repeated InvestAddressItem list = 5;
}

/*************************************       *************************************/
/*************************************Get all the nodes*************************************/

message GetAllStakeNodeListReq 
{
    string version  = 1;
}

message StakeNode 
{
    string addr           = 1;  
    string name           = 2;  
    string ip             = 3;   
    bytes identity       = 4;  
    string logo           = 5;  
    uint64 height         = 6;  
}


 
 
message GetAllStakeNodeListAck 
{
    string version     = 1; 
    sint32 code        = 2; 
    string message     = 3;
    repeated StakeNode list = 4; 
}

/*************************************        *************************************/
/*************************************Get a list of signatures*************************************/

message GetSignCountListReq 
{
    string version  = 1;
}

message SignCount
{
    string addr   = 1;
    uint32 count = 2;
}

message GetSignCountListAck 
{
    string version     = 1;
    sint32 code        = 2;
    string message     = 3;
    repeated SignCount list  = 4;
}

/*************************************     *************************************/
/*************************************Calculate the commission*************************************/

message CalcGasReq 
{
    string version = 1;  
    uint64 height = 2;  
}

message CalcGasAck
{
    string version = 1;  
    int32 code = 2;  
    string message = 3;  
    uint64 height = 4;  
    uint64 gas = 5;  
}


/*************************************        （   ）*************************************/
/*************************************Check the current claim amount (precalculated)*************************************/

message GetBonusListReq
{
    string version = 1;  
    string bonusAddr = 2;
}

message BonusItem
{
    string addr = 1;
    uint64 value = 2;
}

message GetBonusListAck
{
    string version = 1;  
    int32 code = 2;  
    string message = 3;  
    string bonusAddr = 4;
    repeated BonusItem list = 5;
}



/*************************************        *************************************/
/*************************************Multi-signature transaction-related agreements*************************************/

message MultiSignTxReq
{
  string version  = 1;  
  uint64 height = 2;  
  bytes txRaw = 3;
}

message MultiSignTxAck
{
  string version  = 1;  
  int32 code      = 2;  
  string message  = 3;  
  bytes txRaw = 4;
  
}

/*************************************        *************************************/
/*************************************Transaction status related agreements*************************************/


message GetTransactionStatusListReq
{
    string version = 1;  
    string txhash = 2;
}

message OtherStatusItem
{
    string othernodetime = 1;
    int32  othernodecode = 2;
    string othernodemessage = 3;
}


message SelfVerifyStatusItem
{
    string verifyothernodetime = 1;
    int32 verifyothernodecode = 2;
    string verifyothernodemessage = 3;
}

message TransactionStatusItem
{
    string initiatortime = 1;
    int32 selfcode = 2;
    string initiatormessage = 3;
   
    repeated OtherStatusItem Othernode = 4;

    repeated SelfVerifyStatusItem verifyothernode = 5;

    string composetime = 6;
    string selfaddblocktime = 7;
    string selfeaddblockmessage = 8;

    string removependingtime = 9;
}

message GetTransactionStatusListAck
{
    string version = 1;  
    int32 code = 2;  
    string message = 3;  
    TransactionStatusItem list = 5;
}

 

message SuccessRate
{
    string hash = 1;
    double rate = 2;
}

message IsOnChainReq
{
    string version  = 1;  
    repeated string txhash = 2;
    uint64 time = 3;  
}


message IsOnChainAck
{
    string version  = 1;  
    int32 code      = 2;  
    string message  = 3;  
    uint64 time     = 4;  
    repeated SuccessRate percentage = 5; 
}


message GetRestInvestAmountReq
{
    string version = 1;
    string base58 = 2;
}

message GetRestInvestAmountAck
{
    string version= 1;  
    int32 code= 2;  
    string message= 3;  
    uint64 amount= 4;  
    string base58= 5;
}